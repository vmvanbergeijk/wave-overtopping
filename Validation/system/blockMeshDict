/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  4.x                                   |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //


vertices
(
    (0  4.0 -0.10)  //0
    (2  4.0 -0.10)  //1
    (20 0.0 -0.10)  //2
    (0  6.1 -0.10)  //3
    (2  6.1 -0.10)  //4
    (20 0.5 -0.10)  //5
    (0  7.1 -0.10)  //6
    (2  7.1 -0.10)  //7
    (20 1.5 -0.10)  //8
    (23 0.0 -0.10)  //9
    (23 0.5 -0.10)  //10
    (23 1.5 -0.10)  //11

    (0  4.0 0.1)  //12
    (2  4.0 0.1)  //13
    (20 0.0 0.1)  //14
    (0  6.1 0.1)  //15
    (2  6.1 0.1)  //16
    (20 0.5 0.1)  //17
    (0  7.1 0.1)  //18
    (2  7.1 0.1)  //19
    (20 1.5 0.1)  //20
    (23 0.0 0.1)  //21
    (23 0.5 0.1)  //22
    (23 1.5 0.1)  //23
);

blocks
(
    hex (0 1 4 3 12 13 16 15) (40 70 1) simpleGrading (1 1 1)
    hex (1 2 5 4 13 14 17 16) (360 70 1) simpleGrading (1 1 1)
    hex (3 4 7 6 15 16 19 18) (40 17 1) simpleGrading (1 1 1)
    hex (4 5 8 7 16 17 20 19) (360 17 1) simpleGrading (1 1 1)
    hex (2 9 10 5 14 21 22 17) (60 70 1) simpleGrading (1 1 1)
    hex (5 10 11 8 17 22 23 20) (60 17 1) simpleGrading (1 1 1)
);
edges
(
);

boundary
(
    inlet
    {
        type patch;
        faces
        (
            (0 12 15 3)
	    (3 15 18 6)
        );
    }
    outlet
    {
        type patch;
        faces
        (
            (9 21 22 10)
            (10 22 23 11)
        );
    }
   atmosphere
    {
        type patch;
        faces
        (
            (6 7 19 18)
	    (7 8 20 19)
	    (8 11 23 20)
        );
    }
    bottom
    {
        type wall;
        faces
        (
            (0 1 13 12)
            (1 2 14 13)
            (2 9 21 14)
        );
    }
/*    front
    {
	type empty;
        faces
        (
        (0 1 3 2)
        (2 3 5 4)
	);
    }
    
    back
    {	type empty;
        faces
        (
           (6 7 9 8)
           (8 9 11 10)
	);
    }
*/
);

mergePatchPairs
(
);

// ************************************************************************* //
